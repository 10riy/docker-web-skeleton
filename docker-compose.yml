version: "3.3"

services:
  nginx:
    build:
      context: ./docker/nginx
      dockerfile: Dockerfile
    container_name: ${APP_PREFIX}-nginx
    ports:
      - "${APP_PORT}:80"
    volumes:
      - ${APP_PATH}:${DOCUMENT_ROOT}
      - ./docker/nginx/config/default.conf:/etc/nginx/conf.d/default.conf
      - ./docker/nginx/config/nginx.conf:/etc/nginx/nginx.conf
    networks:
      - appnet

  php:
    build:
      context: ./docker/php
      dockerfile: Dockerfile
    environment:
      XDEBUG_CONFIG: remote_host=${XDEBUG_REMOTE_HOST}
      PHP_IDE_CONFIG: serverName=${XDEBUG_REMOTE_HOST}
    container_name: ${APP_PREFIX}-php
    volumes:
      - ${APP_PATH}:${DOCUMENT_ROOT}
      - ./docker/php/xdebug.ini:/usr/local/etc/php/conf.d/xdebug.ini
    networks:
      - appnet

  node:
    build:
      context: ./docker/node
      dockerfile: Dockerfile
    container_name: ${APP_PREFIX}-node
    working_dir: /var/www/html
    ports:
      - "4200:4200"
    volumes:
      - ${APP_PATH}:${DOCUMENT_ROOT}
    tty: true
    networks:
      - appnet

  postgresql:
    build:
      context: ./docker/postgresql
      dockerfile: Dockerfile
    container_name: ${APP_PREFIX}-postgres
    restart: always
    volumes:
      - db:/var/lib/postgresql/data
    ports:
      - "${POSTGRES_PORT}:5432"
    environment:
      - POSTGRES_DB=${POSTGRES_NAME}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    networks:
      - appnet

volumes:
  db:

networks:
  appnet:
    driver: "bridge"
